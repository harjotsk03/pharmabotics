{"ast":null,"code":"var _jsxFileName = \"/Users/harjotsingh/Desktop/repos/pharmabotics/pharmaboticsfrontend/src/pages/Doctor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Doctor = ({\n  doctorName\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    getUsers(); // Fetch users initially when the component mounts\n    const interval = setInterval(() => {\n      getUsers(); // Setup interval to fetch users every second\n    }, 1000);\n    return () => clearInterval(interval); // Cleanup the interval on component unmount\n  }, []);\n  const getUsers = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/users');\n      setUsers(response.data);\n    } catch (error) {\n      setMessage(error.response.data.message); // Display the error message from the server\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Doctor Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Users:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.filter(user => user.name !== doctorName) // Filter out the doctor from the users list\n        .map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [user.name, \" (User ID: \", user.id, \")\", /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: user.medicines.map(medicine => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Medicine: \", medicine.name, \", Interval: \", medicine.interval, \" hours, Dosage: \", medicine.dosage, \", Next Time: \", medicine.nextDosageTimeFormatted]\n            }, medicine.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Doctor, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = Doctor;\nvar _c;\n$RefreshReg$(_c, \"Doctor\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Doctor","doctorName","_s","users","setUsers","getUsers","interval","setInterval","clearInterval","response","get","data","error","setMessage","message","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","user","name","map","id","medicines","medicine","dosage","nextDosageTimeFormatted","_c","$RefreshReg$"],"sources":["/Users/harjotsingh/Desktop/repos/pharmabotics/pharmaboticsfrontend/src/pages/Doctor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const Doctor = ({ doctorName }) => {\n    const [users, setUsers] = useState([]);\n\n    useEffect(() => {\n        getUsers(); // Fetch users initially when the component mounts\n        const interval = setInterval(() => {\n            getUsers(); // Setup interval to fetch users every second\n        }, 1000);\n\n        return () => clearInterval(interval); // Cleanup the interval on component unmount\n    }, []);\n\n\n    const getUsers = async () => {\n        try {\n            const response = await axios.get('http://localhost:3001/users');\n            setUsers(response.data);\n        } catch (error) {\n            setMessage(error.response.data.message); // Display the error message from the server\n        }\n    };\n\n    return (\n        <div>\n            <h1>Doctor Screen</h1>\n\n            <div>\n                <h2>Users:</h2>\n                <ul>\n                    {users\n                        .filter(user => user.name !== doctorName) // Filter out the doctor from the users list\n                        .map(user => (\n                            <li key={user.id}>\n                                {user.name} (User ID: {user.id})\n                                <ul>\n                                    {user.medicines.map(medicine => (\n                                        <li key={medicine.name}>\n                                            Medicine: {medicine.name}, Interval: {medicine.interval} hours, Dosage: {medicine.dosage}, Next Time: {medicine.nextDosageTimeFormatted}\n                                        </li>\n                                    ))}\n                                </ul>\n                            </li>\n                        ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZS,QAAQ,CAAC,CAAC,CAAC,CAAC;IACZ,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BF,QAAQ,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMG,aAAa,CAACF,QAAQ,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMD,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,6BAA6B,CAAC;MAC/DN,QAAQ,CAACK,QAAQ,CAACE,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,UAAU,CAACD,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC;IAC7C;EACJ,CAAC;EAED,oBACIf,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEtBpB,OAAA;MAAAgB,QAAA,gBACIhB,OAAA;QAAAgB,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACfpB,OAAA;QAAAgB,QAAA,EACKZ,KAAK,CACDiB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKrB,UAAU,CAAC,CAAC;QAAA,CACzCsB,GAAG,CAACF,IAAI,iBACLtB,OAAA;UAAAgB,QAAA,GACKM,IAAI,CAACC,IAAI,EAAC,aAAW,EAACD,IAAI,CAACG,EAAE,EAAC,GAC/B,eAAAzB,OAAA;YAAAgB,QAAA,EACKM,IAAI,CAACI,SAAS,CAACF,GAAG,CAACG,QAAQ,iBACxB3B,OAAA;cAAAgB,QAAA,GAAwB,YACV,EAACW,QAAQ,CAACJ,IAAI,EAAC,cAAY,EAACI,QAAQ,CAACpB,QAAQ,EAAC,kBAAgB,EAACoB,QAAQ,CAACC,MAAM,EAAC,eAAa,EAACD,QAAQ,CAACE,uBAAuB;YAAA,GADlIF,QAAQ,CAACJ,IAAI;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAElB,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA,GARAE,IAAI,CAACG,EAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASZ,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACjB,EAAA,CA/CWF,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}