{"ast":null,"code":"var _jsxFileName = \"/Users/harjotsingh/Desktop/repos/pharmabotics/pharmaboticsfrontend/src/components/Alert.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alerts = () => {\n  _s();\n  const [alerts, setAlerts] = useState([]);\n  const alertTimeouts = useRef(new Map()); // Ref to store timeouts\n\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:3001'); // Adjust the URL if needed\n\n    ws.onmessage = event => {\n      const {\n        alert\n      } = JSON.parse(event.data);\n\n      // Clear existing timeout for this alert if it exists\n      if (alertTimeouts.current.has(alert.patient.id)) {\n        const timeouts = alertTimeouts.current.get(alert.patient.id);\n        if (timeouts.has(alert.medicine.name)) {\n          clearTimeout(timeouts.get(alert.medicine.name));\n        }\n      }\n\n      // Update state with the new alert\n      setAlerts(prevAlerts => {\n        const updatedAlerts = prevAlerts.filter(existingAlert => !(existingAlert.patient.id === alert.patient.id && existingAlert.medicine.name === alert.medicine.name));\n        const newAlerts = [...updatedAlerts, alert];\n\n        // Set a new timeout to remove this alert after 30 seconds\n        if (!alertTimeouts.current.has(alert.patient.id)) {\n          alertTimeouts.current.set(alert.patient.id, new Map());\n        }\n        const timeouts = alertTimeouts.current.get(alert.patient.id);\n        timeouts.set(alert.medicine.name, setTimeout(() => {\n          setAlerts(prevAlerts => prevAlerts.filter(existingAlert => !(existingAlert.patient.id === alert.patient.id && existingAlert.medicine.name === alert.medicine.name)));\n        }, 1000)); // 30 seconds timeout\n\n        return newAlerts;\n      });\n    };\n    return () => {\n      ws.close();\n      // Clear all timeouts on component unmount\n      alertTimeouts.current.forEach(timeouts => {\n        timeouts.forEach(timeout => clearTimeout(timeout));\n      });\n      alertTimeouts.current.clear(); // Clear the map itself\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed right-10 top-10 overflow-scroll\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: alerts.map(alert => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"mb-2 p-4 border border-gray-200 rounded shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Patient:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 18\n          }, this), \" \", alert.patient.name, \" (ID: \", alert.patient.id, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Medicine:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 18\n          }, this), \" \", alert.medicine.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Dosage:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 18\n          }, this), \" \", alert.medicine.dosage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Interval:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 18\n          }, this), \" \", alert.medicine.interval]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, `${alert.patient.id}-${alert.medicine.name}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Alerts, \"2lsoB9Pm6ESVsSWlBWQfSsc/bY8=\");\n_c = Alerts;\nexport default Alerts;\nvar _c;\n$RefreshReg$(_c, \"Alerts\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","Alerts","_s","alerts","setAlerts","alertTimeouts","Map","ws","WebSocket","onmessage","event","alert","JSON","parse","data","current","has","patient","id","timeouts","get","medicine","name","clearTimeout","prevAlerts","updatedAlerts","filter","existingAlert","newAlerts","set","setTimeout","close","forEach","timeout","clear","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","dosage","interval","_c","$RefreshReg$"],"sources":["/Users/harjotsingh/Desktop/repos/pharmabotics/pharmaboticsfrontend/src/components/Alert.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\n\nconst Alerts = () => {\n  const [alerts, setAlerts] = useState([]);\n  const alertTimeouts = useRef(new Map()); // Ref to store timeouts\n\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:3001'); // Adjust the URL if needed\n\n    ws.onmessage = (event) => {\n      const { alert } = JSON.parse(event.data);\n\n      // Clear existing timeout for this alert if it exists\n      if (alertTimeouts.current.has(alert.patient.id)) {\n        const timeouts = alertTimeouts.current.get(alert.patient.id);\n        if (timeouts.has(alert.medicine.name)) {\n          clearTimeout(timeouts.get(alert.medicine.name));\n        }\n      }\n\n      // Update state with the new alert\n      setAlerts(prevAlerts => {\n        const updatedAlerts = prevAlerts.filter(existingAlert => \n          !(existingAlert.patient.id === alert.patient.id && existingAlert.medicine.name === alert.medicine.name)\n        );\n        const newAlerts = [...updatedAlerts, alert];\n\n        // Set a new timeout to remove this alert after 30 seconds\n        if (!alertTimeouts.current.has(alert.patient.id)) {\n          alertTimeouts.current.set(alert.patient.id, new Map());\n        }\n        const timeouts = alertTimeouts.current.get(alert.patient.id);\n        timeouts.set(alert.medicine.name, setTimeout(() => {\n          setAlerts(prevAlerts => prevAlerts.filter(existingAlert => \n            !(existingAlert.patient.id === alert.patient.id && existingAlert.medicine.name === alert.medicine.name)\n          ));\n        }, 1000)); // 30 seconds timeout\n\n        return newAlerts;\n      });\n    };\n\n    return () => {\n      ws.close();\n      // Clear all timeouts on component unmount\n      alertTimeouts.current.forEach((timeouts) => {\n        timeouts.forEach(timeout => clearTimeout(timeout));\n      });\n      alertTimeouts.current.clear(); // Clear the map itself\n    };\n  }, []);\n\n  return (\n    <div className='fixed right-10 top-10 overflow-scroll'>\n      <ul>\n        {alerts.map(alert => (\n          <li key={`${alert.patient.id}-${alert.medicine.name}`} className='mb-2 p-4 border border-gray-200 rounded shadow'>\n            <div><strong>Patient:</strong> {alert.patient.name} (ID: {alert.patient.id})</div>\n            <div><strong>Medicine:</strong> {alert.medicine.name}</div>\n            <div><strong>Dosage:</strong> {alert.medicine.dosage}</div>\n            <div><strong>Interval:</strong> {alert.medicine.interval}</div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Alerts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}