{"ast":null,"code":"var _jsxFileName = \"/Users/harjotsingh/Desktop/repos/pharmabotics/pharmaboticsfrontend/src/components/Alert.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alerts = () => {\n  _s();\n  const [alerts, setAlerts] = useState([]);\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:3001'); // Adjust the URL if needed\n\n    ws.onopen = () => {\n      console.log('WebSocket connection opened');\n    };\n    ws.onmessage = event => {\n      const {\n        alert\n      } = JSON.parse(event.data);\n      console.log('Received alert:', alert);\n\n      // Check for duplicates based on patient.id\n      setAlerts(prevAlerts => {\n        if (!prevAlerts.some(existingAlert => existingAlert.id === alert.id)) {\n          return [...prevAlerts, alert];\n        }\n        return prevAlerts;\n      });\n    };\n    ws.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n    ws.onclose = event => {\n      console.log(`WebSocket connection closed with code ${event.code} and reason: ${event.reason}`);\n    };\n    return () => {\n      ws.close();\n    };\n  }, []); // Empty dependency array to ensure effect runs once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed right-10 top-10\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: alerts.map((alert, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: `Time for ${alert.name} (${alert.id}) to take ${alert.medicine.dosage} ${alert.medicine.name} at ${new Date(alert.medicine.nextDosageTime).toLocaleTimeString()}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Alerts, \"Qb5EisKOhIw7EOlQrlFVKt4OMUo=\");\n_c = Alerts;\nexport default Alerts;\nvar _c;\n$RefreshReg$(_c, \"Alerts\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Alerts","_s","alerts","setAlerts","ws","WebSocket","onopen","console","log","onmessage","event","alert","JSON","parse","data","prevAlerts","some","existingAlert","id","onerror","error","onclose","code","reason","close","className","children","map","index","name","medicine","dosage","Date","nextDosageTime","toLocaleTimeString","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/harjotsingh/Desktop/repos/pharmabotics/pharmaboticsfrontend/src/components/Alert.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Alerts = () => {\n  const [alerts, setAlerts] = useState([]);\n\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:3001'); // Adjust the URL if needed\n\n    ws.onopen = () => {\n      console.log('WebSocket connection opened');\n    };\n\n    ws.onmessage = (event) => {\n      const { alert } = JSON.parse(event.data);\n      console.log('Received alert:', alert);\n\n      // Check for duplicates based on patient.id\n      setAlerts(prevAlerts => {\n        if (!prevAlerts.some(existingAlert => existingAlert.id === alert.id)) {\n          return [...prevAlerts, alert];\n        }\n        return prevAlerts;\n      });\n    };\n\n    ws.onerror = (error) => {\n      console.error('WebSocket error:', error);\n    };\n\n    ws.onclose = (event) => {\n      console.log(`WebSocket connection closed with code ${event.code} and reason: ${event.reason}`);\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, []); // Empty dependency array to ensure effect runs once\n\n  return (\n    <div className='fixed right-10 top-10'>\n      <ul>\n        {alerts.map((alert, index) => (\n          <li key={index}>\n            {`Time for ${alert.name} (${alert.id}) to take ${alert.medicine.dosage} ${alert.medicine.name} at ${new Date(alert.medicine.nextDosageTime).toLocaleTimeString()}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Alerts;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMQ,EAAE,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC,CAAC,CAAC;;IAEjDD,EAAE,CAACE,MAAM,GAAG,MAAM;MAChBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC5C,CAAC;IAEDJ,EAAE,CAACK,SAAS,GAAIC,KAAK,IAAK;MACxB,MAAM;QAAEC;MAAM,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;MACxCP,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEG,KAAK,CAAC;;MAErC;MACAR,SAAS,CAACY,UAAU,IAAI;QACtB,IAAI,CAACA,UAAU,CAACC,IAAI,CAACC,aAAa,IAAIA,aAAa,CAACC,EAAE,KAAKP,KAAK,CAACO,EAAE,CAAC,EAAE;UACpE,OAAO,CAAC,GAAGH,UAAU,EAAEJ,KAAK,CAAC;QAC/B;QACA,OAAOI,UAAU;MACnB,CAAC,CAAC;IACJ,CAAC;IAEDX,EAAE,CAACe,OAAO,GAAIC,KAAK,IAAK;MACtBb,OAAO,CAACa,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C,CAAC;IAEDhB,EAAE,CAACiB,OAAO,GAAIX,KAAK,IAAK;MACtBH,OAAO,CAACC,GAAG,CAAC,yCAAyCE,KAAK,CAACY,IAAI,gBAAgBZ,KAAK,CAACa,MAAM,EAAE,CAAC;IAChG,CAAC;IAED,OAAO,MAAM;MACXnB,EAAE,CAACoB,KAAK,CAAC,CAAC;IACZ,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEzB,OAAA;IAAK0B,SAAS,EAAC,uBAAuB;IAAAC,QAAA,eACpC3B,OAAA;MAAA2B,QAAA,EACGxB,MAAM,CAACyB,GAAG,CAAC,CAAChB,KAAK,EAAEiB,KAAK,kBACvB7B,OAAA;QAAA2B,QAAA,EACG,YAAYf,KAAK,CAACkB,IAAI,KAAKlB,KAAK,CAACO,EAAE,aAAaP,KAAK,CAACmB,QAAQ,CAACC,MAAM,IAAIpB,KAAK,CAACmB,QAAQ,CAACD,IAAI,OAAO,IAAIG,IAAI,CAACrB,KAAK,CAACmB,QAAQ,CAACG,cAAc,CAAC,CAACC,kBAAkB,CAAC,CAAC;MAAE,GAD3JN,KAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACrC,EAAA,CA/CID,MAAM;AAAAuC,EAAA,GAANvC,MAAM;AAiDZ,eAAeA,MAAM;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}