{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nconst Alerts = () => {\n  _s();\n  const [alerts, setAlerts] = useState([]);\n  const getUsers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3002/users\");\n      console.log(response);\n      console.log(response.data);\n    } catch (error) {\n      setMessage(error.response.data.message);\n    }\n  };\n};\n_s(Alerts, \"XhbdHYBQeTA7ZvQAKo7930em6uc=\");\n_c = Alerts;\nexport default Alerts;\nvar _c;\n$RefreshReg$(_c, \"Alerts\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","Alerts","_s","alerts","setAlerts","getUsers","response","get","console","log","data","error","setMessage","message","_c","$RefreshReg$"],"sources":["/Users/harjotsingh/Desktop/repos/pharmabotics/pharmaboticsfrontend/src/components/Alert.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\n\nconst Alerts = () => {\n  const [alerts, setAlerts] = useState([]);\n\n  const getUsers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3002/users\");\n\n      console.log(response);\n      console.log(response.data);\n    } catch (error) {\n      setMessage(error.response.data.message);\n    }\n  };\n};\n\nexport default Alerts;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMO,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,6BAA6B,CAAC;MAE/DC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACrBE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,UAAU,CAACD,KAAK,CAACL,QAAQ,CAACI,IAAI,CAACG,OAAO,CAAC;IACzC;EACF,CAAC;AACH,CAAC;AAACX,EAAA,CAbID,MAAM;AAAAa,EAAA,GAANb,MAAM;AAeZ,eAAeA,MAAM;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}