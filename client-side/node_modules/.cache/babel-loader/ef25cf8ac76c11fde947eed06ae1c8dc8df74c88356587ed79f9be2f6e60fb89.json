{"ast":null,"code":"var _jsxFileName = \"/Users/harjotsingh/Desktop/repos/pharmabotics/pharmaboticsfrontend/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useLocation } from 'react-router-dom';\nimport { Doctor } from './pages/Doctor';\nimport { NewPatient } from './pages/NewPatient';\nimport { Patient } from './pages/Patient';\nimport NavBar from './components/NavBar';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [userId, setUserId] = useState('');\n  const [name, setName] = useState('');\n  const [userName, setUserName] = useState('');\n  const [medicineName, setMedicineName] = useState('');\n  const [medicineInterval, setMedicineInterval] = useState(0);\n  const [medicineDosage, setMedicineDosage] = useState(0);\n  const [message, setMessage] = useState('');\n  const [users, setUsers] = useState([]);\n  const [patient, setPatient] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [isDoctor, setIsDoctor] = useState(false);\n  const [doctorName, setDoctorName] = useState('');\n  useEffect(() => {\n    getUsers(); // Fetch users initially when the component mounts\n    const interval = setInterval(() => {\n      getUsers(); // Setup interval to fetch users every second\n    }, 1000);\n    return () => clearInterval(interval); // Cleanup the interval on component unmount\n  }, []);\n  const getUsers = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/users');\n      setUsers(response.data);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error fetching users'); // Display the error message from the server\n    }\n  };\n  const checkFingerprint = async () => {\n    try {\n      const response = await axios.post('http://localhost:3001/check', {\n        id: userId\n      });\n      console.log(response.data);\n      if (response.data.isDoctor) {\n        setLoggedIn(true);\n        setIsDoctor(true);\n        setDoctorName(response.data.name);\n      } else {\n        setLoggedIn(true);\n        setIsDoctor(false);\n        setName(response.data.name);\n        setPatient(response.data);\n      }\n      setMessage(`Fingerprint matched for user: ${response.data.name}`); // Access 'name' property from response data\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        setMessage('Fingerprint not matched');\n      } else {\n        var _error$response2, _error$response2$data;\n        setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Error checking fingerprint'); // Display the error message from the server\n      }\n    }\n  };\n  const handleLogout = () => {\n    setLoggedIn(false);\n    setIsDoctor(false);\n    setDoctorName('');\n    setMessage('Logged out successfully');\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [loggedIn && isDoctor && /*#__PURE__*/_jsxDEV(NavBar, {\n      onLogout: handleLogout,\n      doctorName: doctorName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 38\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          loggedIn: loggedIn,\n          checkFingerprint: checkFingerprint,\n          isDoctor: isDoctor,\n          name: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/doctor\",\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          loggedIn: loggedIn,\n          children: /*#__PURE__*/_jsxDEV(Doctor, {\n            doctorName: doctorName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 82\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/patient\",\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          loggedIn: loggedIn,\n          children: /*#__PURE__*/_jsxDEV(Patient, {\n            onLogout: handleLogout,\n            patient: patient\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 83\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/newPatient\",\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          loggedIn: loggedIn,\n          children: /*#__PURE__*/_jsxDEV(NewPatient, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 86\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"gYF1Xo7dBNuBA054GbFst7iP70k=\");\n_c = App;\nconst Home = ({\n  loggedIn,\n  checkFingerprint,\n  isDoctor,\n  name\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Home;\nconst PrivateRoute = ({\n  loggedIn,\n  children\n}) => {\n  _s2();\n  const location = useLocation();\n  return loggedIn ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\",\n    state: {\n      from: location\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s2(PrivateRoute, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c3 = PrivateRoute;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Home\");\n$RefreshReg$(_c3, \"PrivateRoute\");","map":{"version":3,"names":["React","useState","useEffect","axios","BrowserRouter","Router","Routes","Route","Navigate","useLocation","Doctor","NewPatient","Patient","NavBar","jsxDEV","_jsxDEV","App","_s","userId","setUserId","name","setName","userName","setUserName","medicineName","setMedicineName","medicineInterval","setMedicineInterval","medicineDosage","setMedicineDosage","message","setMessage","users","setUsers","patient","setPatient","loggedIn","setLoggedIn","isDoctor","setIsDoctor","doctorName","setDoctorName","getUsers","interval","setInterval","clearInterval","response","get","data","error","_error$response","_error$response$data","checkFingerprint","post","id","console","log","status","_error$response2","_error$response2$data","handleLogout","children","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","path","element","Home","PrivateRoute","_c","_c2","_s2","location","to","state","from","_c3","$RefreshReg$"],"sources":["/Users/harjotsingh/Desktop/repos/pharmabotics/pharmaboticsfrontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useLocation } from 'react-router-dom';\nimport { Doctor } from './pages/Doctor';\nimport { NewPatient } from './pages/NewPatient';\nimport { Patient } from './pages/Patient';\nimport NavBar from './components/NavBar';\nimport './App.css';\n\nconst App = () => {\n    const [userId, setUserId] = useState('');\n    const [name, setName] = useState('');\n    const [userName, setUserName] = useState('');\n    const [medicineName, setMedicineName] = useState('');\n    const [medicineInterval, setMedicineInterval] = useState(0);\n    const [medicineDosage, setMedicineDosage] = useState(0);\n    const [message, setMessage] = useState('');\n    const [users, setUsers] = useState([]);\n    const [patient, setPatient] = useState('');\n\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [isDoctor, setIsDoctor] = useState(false);\n    const [doctorName, setDoctorName] = useState('');\n\n    useEffect(() => {\n        getUsers(); // Fetch users initially when the component mounts\n        const interval = setInterval(() => {\n            getUsers(); // Setup interval to fetch users every second\n        }, 1000);\n\n        return () => clearInterval(interval); // Cleanup the interval on component unmount\n    }, []);\n\n    const getUsers = async () => {\n        try {\n            const response = await axios.get('http://localhost:3001/users');\n            setUsers(response.data);\n        } catch (error) {\n            setMessage(error.response?.data?.message || 'Error fetching users'); // Display the error message from the server\n        }\n    };\n\n    const checkFingerprint = async () => {\n        try {\n            const response = await axios.post('http://localhost:3001/check', { id: userId });\n\n            console.log(response.data);\n\n            if (response.data.isDoctor) {\n                setLoggedIn(true);\n                setIsDoctor(true);\n                setDoctorName(response.data.name);\n            } else {\n                setLoggedIn(true);\n                setIsDoctor(false);\n                setName(response.data.name);\n                setPatient(response.data);\n            }\n            setMessage(`Fingerprint matched for user: ${response.data.name}`); // Access 'name' property from response data\n        } catch (error) {\n            if (error.response && error.response.status === 404) {\n                setMessage('Fingerprint not matched');\n            } else {\n                setMessage(error.response?.data?.message || 'Error checking fingerprint'); // Display the error message from the server\n            }\n        }\n    };\n\n    const handleLogout = () => {\n        setLoggedIn(false);\n        setIsDoctor(false);\n        setDoctorName('');\n        setMessage('Logged out successfully');\n    };\n\n    return (\n        <Router>\n            {loggedIn && isDoctor && <NavBar onLogout={handleLogout} doctorName={doctorName}/>} {/* Pass the log-out function to NavBar */}\n            <Routes>\n                <Route path=\"/\" element={<Home loggedIn={loggedIn} checkFingerprint={checkFingerprint} isDoctor={isDoctor} name={name}/>} />\n                <Route path=\"/doctor\" element={<PrivateRoute loggedIn={loggedIn}><Doctor doctorName={doctorName} /></PrivateRoute>} />\n                <Route path=\"/patient\" element={<PrivateRoute loggedIn={loggedIn}><Patient onLogout={handleLogout} patient={patient} /></PrivateRoute>} />\n                <Route path=\"/newPatient\" element={<PrivateRoute loggedIn={loggedIn}><NewPatient /></PrivateRoute>} />\n            </Routes>\n        </Router>\n    );\n};\n\nconst Home = ({ loggedIn, checkFingerprint, isDoctor, name }) => {\n    return (\n        <div>\n            \n        </div>\n    );\n};\n\nconst PrivateRoute = ({ loggedIn, children }) => {\n    const location = useLocation();\n    return loggedIn ? (\n        children\n    ) : (\n        <Navigate to=\"/\" state={{ from: location }} />\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}