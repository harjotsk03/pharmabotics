{"ast":null,"code":"var _jsxFileName = \"/Users/harjotsingh/Desktop/repos/pharmabotics/pharmaboticsfrontend/src/pages/Doctor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Doctor = ({\n  doctorName\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    getUsers(); // Fetch users initially when the component mounts\n    const interval = setInterval(() => {\n      getUsers(); // Setup interval to fetch users every second\n    }, 1000);\n    return () => clearInterval(interval); // Cleanup the interval on component unmount\n  }, []);\n  const getUsers = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/users');\n      setUsers(response.data);\n    } catch (error) {\n      setMessage(error.response.data.message); // Display the error message from the server\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-4/5 ml-auto pl-4 pt-4 pageBg h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl\",\n      children: \"Patients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.filter(user => user.name !== doctorName).map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"flex flex-col gap-4 bg-gray-100 px-6 rounded-xl py-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"capitalize text-lg\",\n            children: [\"Name: \", user.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"flex flex-col\",\n            children: user.medicines.map(medicine => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-md capitalize\",\n                children: [\"Medicine: \", medicine.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Interval: \", medicine.interval, \" hours\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Dosage: \", medicine.dosage]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Next Time: \", medicine.nextDosageTimeFormatted]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 45\n              }, this)]\n            }, medicine.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Doctor, \"njLG0sG8N6bWB1PqEOLJ42gcDP8=\");\n_c = Doctor;\nvar _c;\n$RefreshReg$(_c, \"Doctor\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Doctor","doctorName","_s","users","setUsers","message","setMessage","getUsers","interval","setInterval","clearInterval","response","get","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","user","name","map","medicines","medicine","dosage","nextDosageTimeFormatted","id","_c","$RefreshReg$"],"sources":["/Users/harjotsingh/Desktop/repos/pharmabotics/pharmaboticsfrontend/src/pages/Doctor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../App.css';\n\nexport const Doctor = ({ doctorName }) => {\n    const [users, setUsers] = useState([]);\n    const [message, setMessage] = useState('');\n\n    useEffect(() => {\n        getUsers(); // Fetch users initially when the component mounts\n        const interval = setInterval(() => {\n            getUsers(); // Setup interval to fetch users every second\n        }, 1000);\n\n        return () => clearInterval(interval); // Cleanup the interval on component unmount\n    }, []);\n\n\n    const getUsers = async () => {\n        try {\n            const response = await axios.get('http://localhost:3001/users');\n            setUsers(response.data);\n        } catch (error) {\n            setMessage(error.response.data.message); // Display the error message from the server\n        }\n    };\n\n    return (\n        <div className='w-4/5 ml-auto pl-4 pt-4 pageBg h-screen'>\n            <h1 className='text-2xl'>Patients</h1>\n\n            <div>\n                <h2>{message}</h2>\n            </div>\n\n            <div>\n                <ul>\n                    {users\n                        .filter(user => user.name !== doctorName)\n                        .map(user => (\n                            <li className='flex flex-col gap-4 bg-gray-100 px-6 rounded-xl py-4' key={user.id}>\n                                <h1 className='capitalize text-lg'>Name: {user.name}</h1>\n                                <ul className='flex flex-col'>\n                                    {user.medicines.map(medicine => (\n                                        <li key={medicine.name}>\n                                            <h2 className='text-md capitalize'>Medicine: {medicine.name}</h2>\n                                            <h4>Interval: {medicine.interval} hours</h4>\n                                            <h4>Dosage: {medicine.dosage}</h4>\n                                            <h4>Next Time: {medicine.nextDosageTimeFormatted}</h4>\n                                        </li>\n                                    ))}\n                                </ul>\n                            </li>\n                        ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}