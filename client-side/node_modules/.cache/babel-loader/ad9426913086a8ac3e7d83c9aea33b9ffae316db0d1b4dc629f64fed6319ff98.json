{"ast":null,"code":"var _jsxFileName = \"/Users/harjotsingh/Desktop/repos/pharmabotics/pharmaboticsfrontend/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useLocation } from 'react-router-dom';\nimport { Doctor } from './pages/Doctor';\nimport { NewPatient } from './pages/NewPatient';\nimport NavBar from './components/NavBar';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [userId, setUserId] = useState('');\n  const [userName, setUserName] = useState('');\n  const [medicineName, setMedicineName] = useState('');\n  const [medicineInterval, setMedicineInterval] = useState(0);\n  const [medicineDosage, setMedicineDosage] = useState(0);\n  const [message, setMessage] = useState('');\n  const [users, setUsers] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [isDoctor, setIsDoctor] = useState(false);\n  const [doctorName, setDoctorName] = useState('');\n  useEffect(() => {\n    getUsers(); // Fetch users initially when the component mounts\n    const interval = setInterval(() => {\n      getUsers(); // Setup interval to fetch users every second\n    }, 1000);\n    return () => clearInterval(interval); // Cleanup the interval on component unmount\n  }, []);\n  const getUsers = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/users');\n      setUsers(response.data);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error fetching users'); // Display the error message from the server\n    }\n  };\n  const checkFingerprint = async () => {\n    try {\n      const response = await axios.post('http://localhost:3001/check', {\n        id: userId\n      });\n      console.log(response.data);\n      if (response.data.isDoctor) {\n        setLoggedIn(true);\n        setIsDoctor(true);\n        setDoctorName(response.data.name);\n      } else {\n        setLoggedIn(true);\n        setIsDoctor(false);\n      }\n      setMessage(`Fingerprint matched for user: ${response.data.name}`); // Access 'name' property from response data\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        setMessage('Fingerprint not matched');\n      } else {\n        var _error$response2, _error$response2$data;\n        setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Error checking fingerprint'); // Display the error message from the server\n      }\n    }\n  };\n  const handleLogout = () => {\n    setLoggedIn(false);\n    setIsDoctor(false);\n    setDoctorName('');\n    setMessage('Logged out successfully');\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [loggedIn && /*#__PURE__*/_jsxDEV(NavBar, {\n      onLogout: handleLogout,\n      doctorName: doctorName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 26\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          loggedIn: loggedIn,\n          checkFingerprint: checkFingerprint,\n          isDoctor: isDoctor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/doctor\",\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          loggedIn: loggedIn,\n          children: /*#__PURE__*/_jsxDEV(Doctor, {\n            doctorName: doctorName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 82\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/newPatient\",\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          loggedIn: loggedIn,\n          children: /*#__PURE__*/_jsxDEV(NewPatient, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 86\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"LUmd69UVlKEq7r08e3BwjZWWTHo=\");\n_c = App;\nconst Home = ({\n  loggedIn,\n  checkFingerprint,\n  isDoctor\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loggedIn ? isDoctor ? /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/doctor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/newPatient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkFingerprint,\n        children: \"Check Fingerprint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Home;\nconst PrivateRoute = ({\n  loggedIn,\n  children\n}) => {\n  _s2();\n  const location = useLocation();\n  return loggedIn ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\",\n    state: {\n      from: location\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n_s2(PrivateRoute, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c3 = PrivateRoute;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Home\");\n$RefreshReg$(_c3, \"PrivateRoute\");","map":{"version":3,"names":["React","useState","useEffect","axios","BrowserRouter","Router","Routes","Route","Navigate","useLocation","Doctor","NewPatient","NavBar","jsxDEV","_jsxDEV","App","_s","userId","setUserId","userName","setUserName","medicineName","setMedicineName","medicineInterval","setMedicineInterval","medicineDosage","setMedicineDosage","message","setMessage","users","setUsers","loggedIn","setLoggedIn","isDoctor","setIsDoctor","doctorName","setDoctorName","getUsers","interval","setInterval","clearInterval","response","get","data","error","_error$response","_error$response$data","checkFingerprint","post","id","console","log","name","status","_error$response2","_error$response2$data","handleLogout","children","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","path","element","Home","PrivateRoute","_c","to","onClick","_c2","_s2","location","state","from","_c3","$RefreshReg$"],"sources":["/Users/harjotsingh/Desktop/repos/pharmabotics/pharmaboticsfrontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useLocation } from 'react-router-dom';\nimport { Doctor } from './pages/Doctor';\nimport { NewPatient } from './pages/NewPatient';\nimport NavBar from './components/NavBar';\nimport './App.css';\n\nconst App = () => {\n    const [userId, setUserId] = useState('');\n    const [userName, setUserName] = useState('');\n    const [medicineName, setMedicineName] = useState('');\n    const [medicineInterval, setMedicineInterval] = useState(0);\n    const [medicineDosage, setMedicineDosage] = useState(0);\n    const [message, setMessage] = useState('');\n    const [users, setUsers] = useState([]);\n\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [isDoctor, setIsDoctor] = useState(false);\n    const [doctorName, setDoctorName] = useState('');\n\n    useEffect(() => {\n        getUsers(); // Fetch users initially when the component mounts\n        const interval = setInterval(() => {\n            getUsers(); // Setup interval to fetch users every second\n        }, 1000);\n\n        return () => clearInterval(interval); // Cleanup the interval on component unmount\n    }, []);\n\n    const getUsers = async () => {\n        try {\n            const response = await axios.get('http://localhost:3001/users');\n            setUsers(response.data);\n        } catch (error) {\n            setMessage(error.response?.data?.message || 'Error fetching users'); // Display the error message from the server\n        }\n    };\n\n    const checkFingerprint = async () => {\n        try {\n            const response = await axios.post('http://localhost:3001/check', { id: userId });\n\n            console.log(response.data);\n\n            if (response.data.isDoctor) {\n                setLoggedIn(true);\n                setIsDoctor(true);\n                setDoctorName(response.data.name);\n            } else {\n                setLoggedIn(true);\n                setIsDoctor(false);\n            }\n            setMessage(`Fingerprint matched for user: ${response.data.name}`); // Access 'name' property from response data\n        } catch (error) {\n            if (error.response && error.response.status === 404) {\n                setMessage('Fingerprint not matched');\n            } else {\n                setMessage(error.response?.data?.message || 'Error checking fingerprint'); // Display the error message from the server\n            }\n        }\n    };\n\n    const handleLogout = () => {\n        setLoggedIn(false);\n        setIsDoctor(false);\n        setDoctorName('');\n        setMessage('Logged out successfully');\n    };\n\n    return (\n        <Router>\n            {loggedIn && <NavBar onLogout={handleLogout} doctorName={doctorName}/>} {/* Pass the log-out function to NavBar */}\n            <Routes>\n                <Route path=\"/\" element={<Home loggedIn={loggedIn} checkFingerprint={checkFingerprint} isDoctor={isDoctor} />} />\n                <Route path=\"/doctor\" element={<PrivateRoute loggedIn={loggedIn}><Doctor doctorName={doctorName} /></PrivateRoute>} />\n                <Route path=\"/newPatient\" element={<PrivateRoute loggedIn={loggedIn}><NewPatient /></PrivateRoute>} />\n            </Routes>\n        </Router>\n    );\n};\n\nconst Home = ({ loggedIn, checkFingerprint, isDoctor }) => {\n    return (\n        <div>\n            {loggedIn ? (\n                isDoctor ? (\n                    <Navigate to=\"/doctor\" />\n                ) : (\n                    <Navigate to=\"/newPatient\" />\n                )\n            ) : (\n                <div>\n                    <button onClick={checkFingerprint}>Check Fingerprint</button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nconst PrivateRoute = ({ loggedIn, children }) => {\n    const location = useLocation();\n    return loggedIn ? (\n        children\n    ) : (\n        <Navigate to=\"/\" state={{ from: location }} />\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}