{"ast":null,"code":"var _jsxFileName = \"/Users/harjotsingh/Desktop/repos/pharmabotics/pharmaboticsfrontend/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useLocation } from 'react-router-dom';\nimport { Doctor } from './pages/Doctor';\nimport { NewPatient } from './pages/NewPatient';\nimport { Patient } from \"./pages/Patient\";\nimport { Login } from \"./pages/LogIn\";\nimport NavBar from \"./components/NavBar\";\nimport \"./App.css\";\nimport Alerts from \"./components/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [userId, setUserId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [medicineName, setMedicineName] = useState(\"\");\n  const [medicineInterval, setMedicineInterval] = useState(0);\n  const [medicineDosage, setMedicineDosage] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [patient, setPatient] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [isDoctor, setIsDoctor] = useState(false);\n  const [doctorName, setDoctorName] = useState(\"\");\n  useEffect(() => {\n    getUsers(); // Fetch users initially when the component mounts\n    const interval = setInterval(() => {\n      getUsers(); // Setup interval to fetch users every second\n    }, 1000);\n    return () => clearInterval(interval); // Cleanup the interval on component unmount\n  }, []);\n  const getUsers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3002/users\");\n      setUsers(response.data);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error fetching users\"); // Display the error message from the server\n    }\n  };\n  const checkFingerprint = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:3002/check\", {\n        id: userId\n      });\n      console.log(response.data);\n      if (response.data.isDoctor) {\n        setLoggedIn(true);\n        setIsDoctor(true);\n        setDoctorName(response.data.name);\n      } else {\n        setLoggedIn(true);\n        setIsDoctor(false);\n        setName(response.data.name);\n        setPatient(response.data);\n      }\n      setMessage(`Fingerprint matched for user: ${response.data.name}`); // Access 'name' property from response data\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        setMessage(\"No fingerprint match found. You are either not a registered patient, or please try to scan again.\");\n      } else {\n        var _error$response2, _error$response2$data;\n        setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Error checking fingerprint\"); // Display the error message from the server\n      }\n    }\n  };\n  const handleLogout = () => {\n    setLoggedIn(false);\n    setIsDoctor(false);\n    setDoctorName(\"\");\n    setMessage(\"Logged out successfully\");\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [loggedIn && isDoctor && /*#__PURE__*/_jsxDEV(NavBar, {\n      onLogout: handleLogout,\n      doctorName: doctorName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Alerts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          loggedIn: loggedIn,\n          message: message,\n          checkFingerprint: checkFingerprint,\n          isDoctor: isDoctor,\n          name: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/doctor\",\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          loggedIn: loggedIn,\n          redirectTo: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Doctor, {\n            doctorName: doctorName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/patient\",\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          loggedIn: loggedIn,\n          redirectTo: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Patient, {\n            onLogout: handleLogout,\n            patient: patient\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/newPatient\",\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          loggedIn: loggedIn,\n          redirectTo: \"/\",\n          children: /*#__PURE__*/_jsxDEV(NewPatient, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: loggedIn ? isDoctor ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/doctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/patient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eBqqkDKbWcXQxZLRkP591QNkTtk=\");\n_c = App;\nconst PrivateRoute = ({\n  loggedIn,\n  children,\n  redirectTo\n}) => {\n  _s2();\n  const location = useLocation();\n  return loggedIn ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: redirectTo,\n    state: {\n      from: location\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s2(PrivateRoute, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c2 = PrivateRoute;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"PrivateRoute\");","map":{"version":3,"names":["React","useState","useEffect","axios","BrowserRouter","Router","Routes","Route","Navigate","useLocation","Doctor","NewPatient","Patient","Login","NavBar","Alerts","jsxDEV","_jsxDEV","App","_s","userId","setUserId","name","setName","userName","setUserName","medicineName","setMedicineName","medicineInterval","setMedicineInterval","medicineDosage","setMedicineDosage","message","setMessage","users","setUsers","patient","setPatient","loggedIn","setLoggedIn","isDoctor","setIsDoctor","doctorName","setDoctorName","getUsers","interval","setInterval","clearInterval","response","get","data","error","_error$response","_error$response$data","checkFingerprint","post","id","console","log","status","_error$response2","_error$response2$data","handleLogout","children","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","path","element","PrivateRoute","redirectTo","to","_c","_s2","location","state","from","_c2","$RefreshReg$"],"sources":["/Users/harjotsingh/Desktop/repos/pharmabotics/pharmaboticsfrontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useLocation } from 'react-router-dom';\nimport { Doctor } from './pages/Doctor';\nimport { NewPatient } from './pages/NewPatient';\nimport { Patient } from \"./pages/Patient\";\nimport { Login } from \"./pages/LogIn\";\nimport NavBar from \"./components/NavBar\";\nimport \"./App.css\";\nimport Alerts from \"./components/Alert\";\n\nconst App = () => {\n  const [userId, setUserId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [medicineName, setMedicineName] = useState(\"\");\n  const [medicineInterval, setMedicineInterval] = useState(0);\n  const [medicineDosage, setMedicineDosage] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [patient, setPatient] = useState(\"\");\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [isDoctor, setIsDoctor] = useState(false);\n  const [doctorName, setDoctorName] = useState(\"\");\n\n  useEffect(() => {\n    getUsers(); // Fetch users initially when the component mounts\n    const interval = setInterval(() => {\n      getUsers(); // Setup interval to fetch users every second\n    }, 1000);\n\n    return () => clearInterval(interval); // Cleanup the interval on component unmount\n  }, []);\n\n  const getUsers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3002/users\");\n      setUsers(response.data);\n    } catch (error) {\n      setMessage(error.response?.data?.message || \"Error fetching users\"); // Display the error message from the server\n    }\n  };\n\n  const checkFingerprint = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:3002/check\", {\n        id: userId,\n      });\n\n      console.log(response.data);\n\n      if (response.data.isDoctor) {\n        setLoggedIn(true);\n        setIsDoctor(true);\n        setDoctorName(response.data.name);\n      } else {\n        setLoggedIn(true);\n        setIsDoctor(false);\n        setName(response.data.name);\n        setPatient(response.data);\n      }\n      setMessage(`Fingerprint matched for user: ${response.data.name}`); // Access 'name' property from response data\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        setMessage(\n          \"No fingerprint match found. You are either not a registered patient, or please try to scan again.\"\n        );\n      } else {\n        setMessage(\n          error.response?.data?.message || \"Error checking fingerprint\"\n        ); // Display the error message from the server\n      }\n    }\n  };\n\n  const handleLogout = () => {\n    setLoggedIn(false);\n    setIsDoctor(false);\n    setDoctorName(\"\");\n    setMessage(\"Logged out successfully\");\n  };\n\n  return (\n    <Router>\n      {loggedIn && isDoctor && (\n        <NavBar onLogout={handleLogout} doctorName={doctorName} />\n      )}\n      <Alerts />\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <Login\n              loggedIn={loggedIn}\n              message={message}\n              checkFingerprint={checkFingerprint}\n              isDoctor={isDoctor}\n              name={name}\n            />\n          }\n        />\n        <Route\n          path=\"/doctor\"\n          element={\n            <PrivateRoute loggedIn={loggedIn} redirectTo=\"/\">\n              <Doctor doctorName={doctorName} />\n            </PrivateRoute>\n          }\n        />\n        <Route\n          path=\"/patient\"\n          element={\n            <PrivateRoute loggedIn={loggedIn} redirectTo=\"/\">\n              <Patient onLogout={handleLogout} patient={patient} />\n            </PrivateRoute>\n          }\n        />\n        <Route\n          path=\"/newPatient\"\n          element={\n            <PrivateRoute loggedIn={loggedIn} redirectTo=\"/\">\n              <NewPatient />\n            </PrivateRoute>\n          }\n        />\n        <Route\n          path=\"*\"\n          element={\n            loggedIn ? (\n              isDoctor ? (\n                <Navigate to=\"/doctor\" />\n              ) : (\n                <Navigate to=\"/patient\" />\n              )\n            ) : (\n              <Navigate to=\"/\" />\n            )\n          }\n        />\n      </Routes>\n    </Router>\n  );\n};\n\nconst PrivateRoute = ({ loggedIn, children, redirectTo }) => {\n  const location = useLocation();\n  return loggedIn ? (\n    children\n  ) : (\n    <Navigate to={redirectTo} state={{ from: location }} />\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}