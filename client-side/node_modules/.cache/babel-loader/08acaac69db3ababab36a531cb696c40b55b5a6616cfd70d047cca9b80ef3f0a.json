{"ast":null,"code":"var _jsxFileName = \"/Users/harjotsingh/Desktop/repos/pharmabotics/pharmaboticsfrontend/src/components/Alert.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alerts = () => {\n  _s();\n  const [alerts, setAlerts] = useState([]);\n  const alertTimeouts = useRef({});\n  useEffect(() => {\n    const ws = new WebSocket(\"ws://localhost:5000\"); // Adjust the URL if needed\n\n    ws.onmessage = event => {\n      const {\n        alert\n      } = JSON.parse(event.data);\n      if (!alert.patient.isDoctor) {\n        setAlerts(prevAlerts => {\n          const existingAlertIndex = prevAlerts.findIndex(existingAlert => existingAlert.patient.id === alert.patient.id && existingAlert.medicine.name === alert.medicine.name);\n          if (existingAlertIndex > -1) {\n            const updatedAlerts = [...prevAlerts];\n            updatedAlerts[existingAlertIndex] = alert;\n            return updatedAlerts;\n          } else {\n            const updatedAlerts = [...prevAlerts, alert];\n            return updatedAlerts;\n          }\n        });\n\n        // Clear old timeout and set new one\n        if (!alertTimeouts.current[alert.patient.id]) {\n          alertTimeouts.current[alert.patient.id] = {};\n        }\n        if (alertTimeouts.current[alert.patient.id][alert.medicine.name]) {\n          clearTimeout(alertTimeouts.current[alert.patient.id][alert.medicine.name]);\n        }\n        alertTimeouts.current[alert.patient.id][alert.medicine.name] = setTimeout(() => {\n          setAlerts(prevAlerts => prevAlerts.filter(existingAlert => !(existingAlert.patient.id === alert.patient.id && existingAlert.medicine.name === alert.medicine.name)));\n          delete alertTimeouts.current[alert.patient.id][alert.medicine.name]; // Remove the timeout reference after it expires\n        }, 30000); // 30 seconds timeout\n      }\n    };\n    return () => {\n      ws.close();\n      Object.values(alertTimeouts.current).forEach(timeouts => Object.values(timeouts).forEach(timeout => clearTimeout(timeout)));\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed right-10 top-10 overflow-scroll\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: alerts.map(alert => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"mb-2 p-4 bg-yellow-500 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Patient:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), \" \", alert.patient.name, \" (ID:\", \" \", alert.patient.id, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Medicine:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), \" \", alert.medicine.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Dosage:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), \" \", alert.medicine.dosage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Interval:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), \" \", alert.medicine.interval]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, `${alert.patient.id}-${alert.medicine.name}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Alerts, \"2lsoB9Pm6ESVsSWlBWQfSsc/bY8=\");\n_c = Alerts;\nexport default Alerts;\nvar _c;\n$RefreshReg$(_c, \"Alerts\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","Alerts","_s","alerts","setAlerts","alertTimeouts","ws","WebSocket","onmessage","event","alert","JSON","parse","data","patient","isDoctor","prevAlerts","existingAlertIndex","findIndex","existingAlert","id","medicine","name","updatedAlerts","current","clearTimeout","setTimeout","filter","close","Object","values","forEach","timeouts","timeout","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","dosage","interval","_c","$RefreshReg$"],"sources":["/Users/harjotsingh/Desktop/repos/pharmabotics/pharmaboticsfrontend/src/components/Alert.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\nconst Alerts = () => {\n  const [alerts, setAlerts] = useState([]);\n  const alertTimeouts = useRef({});\n\n  useEffect(() => {\n    const ws = new WebSocket(\"ws://localhost:5000\"); // Adjust the URL if needed\n\n    ws.onmessage = (event) => {\n      const { alert } = JSON.parse(event.data);\n\n      if (!alert.patient.isDoctor) {\n        setAlerts((prevAlerts) => {\n          const existingAlertIndex = prevAlerts.findIndex(\n            (existingAlert) =>\n              existingAlert.patient.id === alert.patient.id &&\n              existingAlert.medicine.name === alert.medicine.name\n          );\n\n          if (existingAlertIndex > -1) {\n            const updatedAlerts = [...prevAlerts];\n            updatedAlerts[existingAlertIndex] = alert;\n            return updatedAlerts;\n          } else {\n            const updatedAlerts = [...prevAlerts, alert];\n            return updatedAlerts;\n          }\n        });\n\n        // Clear old timeout and set new one\n        if (!alertTimeouts.current[alert.patient.id]) {\n          alertTimeouts.current[alert.patient.id] = {};\n        }\n        if (alertTimeouts.current[alert.patient.id][alert.medicine.name]) {\n          clearTimeout(\n            alertTimeouts.current[alert.patient.id][alert.medicine.name]\n          );\n        }\n\n        alertTimeouts.current[alert.patient.id][alert.medicine.name] =\n          setTimeout(() => {\n            setAlerts((prevAlerts) =>\n              prevAlerts.filter(\n                (existingAlert) =>\n                  !(\n                    existingAlert.patient.id === alert.patient.id &&\n                    existingAlert.medicine.name === alert.medicine.name\n                  )\n              )\n            );\n            delete alertTimeouts.current[alert.patient.id][alert.medicine.name]; // Remove the timeout reference after it expires\n          }, 30000); // 30 seconds timeout\n      }\n    };\n\n    return () => {\n      ws.close();\n      Object.values(alertTimeouts.current).forEach((timeouts) =>\n        Object.values(timeouts).forEach((timeout) => clearTimeout(timeout))\n      );\n    };\n  }, []);\n\n  return (\n    <div className=\"fixed right-10 top-10 overflow-scroll\">\n      <ul>\n        {alerts.map((alert) => (\n          <li\n            key={`${alert.patient.id}-${alert.medicine.name}`}\n            className=\"mb-2 p-4 bg-yellow-500 rounded-lg\"\n          >\n            <div>\n              <strong>Patient:</strong> {alert.patient.name} (ID:{\" \"}\n              {alert.patient.id})\n            </div>\n            <div>\n              <strong>Medicine:</strong> {alert.medicine.name}\n            </div>\n            <div>\n              <strong>Dosage:</strong> {alert.medicine.dosage}\n            </div>\n            <div>\n              <strong>Interval:</strong> {alert.medicine.interval}\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Alerts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}